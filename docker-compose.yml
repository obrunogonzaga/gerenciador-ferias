version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: vacation_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: vacation_user
      POSTGRES_PASSWORD: vacation_pass
      POSTGRES_DB: vacation_management
      TZ: America/Sao_Paulo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vacation_user -d vacation_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: vacation_backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://vacation_user:vacation_pass@postgres:5432/vacation_management?sslmode=disable
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      PORT: 8080
      GIN_MODE: ${GIN_MODE:-debug}
    volumes:
      - ./backend:/app
    ports:
      - "8080:8080"
    command: air

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: vacation_frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3001:3000"
    command: npm run dev

volumes:
  postgres_data: